T = int(input())


def dfs(node, cnt):
    global max_
    if visitied[node]:
        return

    max_ = max(cnt, max_)
    visitied[node] = True

    for v in edge[node]:
        if not visitied[v]:
            dfs(v, cnt+1)
            visitied[v] = False


for _ in range(T):
    N, M = map(int, input().split())
    max_ = 0
    edge =[[] for _ in range(N+1)]
    for i in range(M):
        v1, v2 = map(int, input().split())
        edge[v1].append(v2)
        edge[v2].append(v1)

    for i in range(1, N+1):
        visitied = [False for _ in range(N+1)]
        cnt = 0
        dfs(i, cnt+1)
    print(f'#{_+1} {max_}')